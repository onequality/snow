{"version":3,"file":"src_app_tab1_tab1_module_ts.js","mappings":"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","sources":["./src/app/tab1/tab1-routing.module.ts","./src/app/tab1/tab1.module.ts","./src/app/tab1/tab1.page.ts","./src/app/tab1/tab1.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","import { Component, ɵɵsetComponentScope } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AlertController } from '@ionic/angular';\n\nimport { GlobalService } from '../global.service';\nimport { InterfaceJob } from '../interfaceJob';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n\n  private jobs: InterfaceJob;\n \n  public date_job: Date = new Date();\n  public snow: number;\n  public shoviling_h: number;\n  public icemelt_h: number;\n  public plaw_h: number;\n  public shoviling_i: number;\n  public icemelt_i: number;\n  public plaw_i: number;\n  public obs: string;\n\n  constructor(\n    private http: HttpClient,\n    private alertController: AlertController,\n    private global: GlobalService,\n  ) {\n    this.showDate();\n  }\n\n  showDate() \n  {\n    console.log\n    (\n      ' veja o update da data aqui e agora: ', \n      'Date: ', this.date_job,\n      'Snow: ', this.snow,\n      'Ice melt H: ', this.icemelt_h,\n      '\" I: ', this.icemelt_i,\n      'Plaw H: ', this.plaw_h,\n      ' \" I: ', this.plaw_i,\n      'Shoviling H: ', this.shoviling_h,\n      ' \" I: ', this.shoviling_i,\n      'Obs: ', this.obs\n    );\n    // still inserted on database\n  }\n\n  insertJob() \n  {\n    let postData = \n    {      \n      date_job: this.date_job,\n      snow: this.snow,\n      icemelt_h: this.icemelt_h,\n      icemelt_i: this.icemelt_i,\n      plaw_h: this.plaw_h,\n      plaw_i: this.plaw_i,\n      shoviling_h: this.shoviling_h,\n      shoviling_i: this.shoviling_i,\n      obs: this.obs,\n    };\n    console.log(postData);\n    this.http.put(this.global.urlServer + 'insertJob', postData).subscribe((data: any) => {\n      console.log('Send Work Order was a success!', data);\n      this.global.presentToastGeneric('Send Work Order was a success!', 'success');\n    }, error => {\n      this.global.presentToastGeneric('Error when to send work order, try again!', 'error');\n      console.log(error);\n    });\n  \n  }\n\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title> Form </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-grid>\\n    <ion-item class=\\\"drop-categoria\\\" style=\\\"margin-bottom: 1%\\\">\\n      <ion-label position=\\\"stacked\\\">Date</ion-label>\\n      <ion-input\\n        name=\\\"date_job\\\"\\n        id=\\\"date_job\\\"\\n        value=\\\"date_job\\\"\\n        type=\\\"date\\\"\\n        required\\n        [(ngModel)]=\\\"date_job\\\"\\n        style=\\\"background-color: '#red'\\\"\\n      >\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Snow (\\\"):</ion-label>\\n      <ion-input \\n      name=\\\"snow\\\" \\n      id=\\\"snow\\\" \\n      required\\n      [(ngModel)]=\\\"snow\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Shoviling (h):</ion-label>\\n          <ion-input\\n            type=\\\"number\\\"\\n            name=\\\"shoviling_h\\\"\\n            id=\\\"shoviling_h\\\"\\n            [(ngModel)]=\\\"shoviling_h\\\"\\n          ></ion-input>\\n        </ion-item>\\n      </ion-col>\\n      <ion-col>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Shoviling (\\\")</ion-label>\\n          <ion-input\\n            type=\\\"number\\\"\\n            name=\\\"shoviling_i\\\"\\n            id=\\\"shoviling_i\\\"\\n            [(ngModel)]=\\\"shoviling_i\\\"\\n          ></ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Ice Melt (h):</ion-label>\\n          <ion-input\\n            type=\\\"number\\\"\\n            name=\\\"icemelt_h\\\"\\n            id=\\\"icemelt_h\\\"\\n            [(ngModel)]=\\\"icemelt_h\\\"\\n          ></ion-input>\\n        </ion-item>\\n      </ion-col>\\n      <ion-col>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Ice Melt (\\\")</ion-label>\\n          <ion-input\\n            type=\\\"number\\\"\\n            name=\\\"icemelt_i\\\"\\n            id=\\\"icemelt_i\\\"\\n            [(ngModel)]=\\\"icemelt_i\\\"\\n          ></ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Plaw (h):</ion-label>\\n          <ion-input\\n            type=\\\"number\\\"\\n            name=\\\"plaw_h\\\"\\n            id=\\\"plaw_h\\\"\\n            [(ngModel)]=\\\"plaw_h\\\"\\n          ></ion-input>\\n        </ion-item>\\n      </ion-col>\\n      <ion-col>\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">Plaw (\\\")</ion-label>\\n          <ion-input\\n            type=\\\"number\\\"\\n            name=\\\"plaw_i\\\"\\n            id=\\\"plaw_i\\\"\\n            [(ngModel)]=\\\"plaw_i\\\"\\n          ></ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Obs:</ion-label>\\n      <ion-input name=\\\"obs\\\" id=\\\"obs\\\" [(ngModel)]=\\\"obs\\\"> </ion-input>\\n    </ion-item>\\n    <div align='center'>\\n    <ion-button\\n      size=\\\"small\\\"\\n      color=\\\"primary\\\"\\n      class=\\\"pt-xs--4\\\"\\n      ion-button\\n      (click)=\\\"insertJob()\\\"\\n    >\\n      <ion-icon name=\\\"save\\\"></ion-icon> Insert job into database\\n    </ion-button>\\n    </div>\\n  </ion-grid>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}